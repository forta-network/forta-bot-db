# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: forta-bot-db

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=2.24.0"

provider:
  name: aws
  runtime: go1.x
  profile: forta-research # Set this to your desired aws profile
  architecture: x86_64
  httpApi:
    disableDefaultEndpoint: true

  # you can overwrite defaults here
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - "Ref" : "ServerlessDeploymentBucket"
                - "/*"
        - Effect: Allow
          Action: s3:ListBucket
          Resource: arn:aws:s3:::${opt:stage}-forta-bot-db
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: arn:aws:s3:::${opt:stage}-forta-bot-db/*
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
          Resource: arn:aws:dynamodb:*:*:table/${opt:stage}-forta-bot-db-auth


# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
 individually: true
 exclude:
   - ./**

functions:
  handler:
    handler: bin/lambda-bot-db
    package:
      include:
        - ./bin/lambda-bot-db
    environment:
      bucket: ${opt:stage}-forta-bot-db
      table: ${opt:stage}-forta-bot-db-auth
      POLYGON_JSON_RPC: ${ssm:POLYGON_JSON_RPC}
    events:
      - httpApi:
          method: POST
          path: /database/{scope}/{key}
      - httpApi:
          method: PUT
          path: /database/{scope}/{key}
      - httpApi:
          method: GET
          path: /database/{scope}/{key}
      - httpApi:
          method: DELETE
          path: /database/{scope}/{key}
      - httpApi:
          method: POST
          path: /database/{key}
      - httpApi:
          method: PUT
          path: /database/{key}
      - httpApi:
          method: GET
          path: /database/{key}
      - httpApi:
          method: DELETE
          path: /database/{key}

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    FortaDBBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${opt:stage}-forta-bot-db
    FortaAuthCache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-forta-bot-db-auth
        AttributeDefinitions:
          - AttributeName: authId
            AttributeType: S
        KeySchema:
          - AttributeName: authId
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true
        BillingMode: PAY_PER_REQUEST